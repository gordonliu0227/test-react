{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gordon\\\\Desktop\\\\React-Firebase\\\\src\\\\components\\\\Timezone.js\";\nimport React from \"react\";\nimport { timezoneNames, ZonedDate } from \"@progress/kendo-date-math\";\nimport \"@progress/kendo-date-math/tz/all\";\nconst timezones = timezoneNames().filter(l => l.indexOf(\"/\") > -1).sort((a, b) => a.localeCompare(b));\n\nclass Timezone extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timezone: \"Europe/Sofia\",\n      date: null,\n      result: null\n    };\n\n    this.tick = () => {\n      const date = new Date();\n      const result = ZonedDate.fromLocalDate(date, this.state.timezone);\n      this.setState({\n        date,\n        result\n      });\n    };\n\n    this.handleTimezoneChange = event => {\n      this.setState({\n        timezone: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.tick();\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      result,\n      date\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row example-config\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-12 example-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Local time in\", /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleTimezoneChange,\n      value: this.state.timezone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, timezones.map((zone, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, zone)))), result.toString())));\n  }\n\n}\n\nexport default Timezone;","map":{"version":3,"sources":["C:/Users/Gordon/Desktop/React-Firebase/src/components/Timezone.js"],"names":["React","timezoneNames","ZonedDate","timezones","filter","l","indexOf","sort","a","b","localeCompare","Timezone","Component","state","timezone","date","result","tick","Date","fromLocalDate","setState","handleTimezoneChange","event","target","value","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","map","zone","i","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,2BAAzC;AACA,OAAO,kCAAP;AAEA,MAAMC,SAAS,GAAGF,aAAa,GAC5BG,MADe,CACPC,CAAD,IAAOA,CAAC,CAACC,OAAF,CAAU,GAAV,IAAiB,CAAC,CADjB,EAEfC,IAFe,CAEV,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAFA,CAAlB;;AAIA,MAAME,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACNC,MAAAA,QAAQ,EAAE,cADJ;AAENC,MAAAA,IAAI,EAAE,IAFA;AAGNC,MAAAA,MAAM,EAAE;AAHF,KAF6B;;AAAA,SAiBrCC,IAjBqC,GAiB9B,MAAM;AACX,YAAMF,IAAI,GAAG,IAAIG,IAAJ,EAAb;AACA,YAAMF,MAAM,GAAGd,SAAS,CAACiB,aAAV,CAAwBJ,IAAxB,EAA8B,KAAKF,KAAL,CAAWC,QAAzC,CAAf;AACA,WAAKM,QAAL,CAAc;AAAEL,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAd;AACD,KArBoC;;AAAA,SAuBrCK,oBAvBqC,GAuBbC,KAAD,IAAW;AAChC,WAAKF,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAEQ,KAAK,CAACC,MAAN,CAAaC;AAAzB,OAAd;AACD,KAzBoC;AAAA;;AAQrCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,IAAL;AACA,SAAKS,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKV,IAAL,EAAP,EAAoB,IAApB,CAA3B;AACD;;AAEDW,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;AAYDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,MAAF;AAAUD,MAAAA;AAAV,QAAmB,KAAKF,KAA9B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEE;AACE,MAAA,QAAQ,EAAE,KAAKQ,oBADjB;AAEE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,QAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGX,SAAS,CAAC4B,GAAV,CAAc,CAACC,IAAD,EAAOC,CAAP,kBACb;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,IAAjB,CADD,CAJH,CAFF,CADF,EAYIhB,MAAM,CAACkB,QAAP,EAZJ,CADF,CADF,CADF;AAoBD;;AAjDoC;;AAoDvC,eAAevB,QAAf","sourcesContent":["import React from \"react\";\r\nimport { timezoneNames, ZonedDate } from \"@progress/kendo-date-math\";\r\nimport \"@progress/kendo-date-math/tz/all\";\r\n\r\nconst timezones = timezoneNames()\r\n  .filter((l) => l.indexOf(\"/\") > -1)\r\n  .sort((a, b) => a.localeCompare(b));\r\n\r\nclass Timezone extends React.Component {\r\n  interval;\r\n  state = {\r\n    timezone: \"Europe/Sofia\",\r\n    date: null,\r\n    result: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.tick();\r\n    this.interval = setInterval(() => this.tick(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick = () => {\r\n    const date = new Date();\r\n    const result = ZonedDate.fromLocalDate(date, this.state.timezone);\r\n    this.setState({ date, result });\r\n  };\r\n\r\n  handleTimezoneChange = (event) => {\r\n    this.setState({ timezone: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { result, date } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row example-config\">\r\n          <div className=\"col-xs-12 example-col\">\r\n            <p>\r\n              Local time in\r\n              <select\r\n                onChange={this.handleTimezoneChange}\r\n                value={this.state.timezone}\r\n              >\r\n                {timezones.map((zone, i) => (\r\n                  <option key={i}>{zone}</option>\r\n                ))}\r\n              </select>\r\n            </p>\r\n            { result.toString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timezone;\r\n"]},"metadata":{},"sourceType":"module"}