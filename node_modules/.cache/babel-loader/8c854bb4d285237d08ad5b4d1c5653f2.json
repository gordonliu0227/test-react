{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gordon\\\\Desktop\\\\React-Firebase\\\\src\\\\components\\\\Timezone.js\";\nimport * as React from \"react\";\nimport { timezoneNames, ZonedDate } from \"@progress/kendo-date-math\";\nimport \"@progress/kendo-date-math/tz/all\";\nexport default function Timezone() {\n  const timezones = timezoneNames().filter(l => l.indexOf(\"/\") > -1).sort((a, b) => a.localeCompare(b));\n\n  class handleTimezoneChange extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        timezone: \"\",\n        date: null,\n        result: null\n      };\n\n      this.tick = () => {\n        const date = new Date();\n        const result = ZonedDate.fromLocalDate(date, this.state.timezone);\n        this.setState({\n          date,\n          result\n        });\n      };\n\n      this.handleTimezoneChange = event => {\n        this.setState({\n          timezone: event.target.value\n        });\n      };\n    }\n\n    componentDidMount() {\n      this.tick();\n      this.interval = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n\n    render() {\n      const {\n        result,\n        date\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row example-config\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xs-12 example-col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, \"Local time in\", /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.handleTimezoneChange,\n        value: this.state.timezone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, timezones.map((zone, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }\n      }, zone)))), result && result.toString()));\n    }\n\n  }\n}","map":{"version":3,"sources":["C:/Users/Gordon/Desktop/React-Firebase/src/components/Timezone.js"],"names":["React","timezoneNames","ZonedDate","Timezone","timezones","filter","l","indexOf","sort","a","b","localeCompare","handleTimezoneChange","Component","state","timezone","date","result","tick","Date","fromLocalDate","setState","event","target","value","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","map","zone","i","toString"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,2BAAzC;AACA,OAAO,kCAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAMC,SAAS,GAAGH,aAAa,GAC5BI,MADe,CACPC,CAAD,IAAOA,CAAC,CAACC,OAAF,CAAU,GAAV,IAAiB,CAAC,CADjB,EAEfC,IAFe,CAEV,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAFA,CAAlB;;AAIA,QAAME,oBAAN,SAAmCZ,KAAK,CAACa,SAAzC,CAAmD;AAAA;AAAA;AAAA,WAEjDC,KAFiD,GAEzC;AACNC,QAAAA,QAAQ,EAAE,EADJ;AAENC,QAAAA,IAAI,EAAE,IAFA;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAFyC;;AAAA,WAiBjDC,IAjBiD,GAiB1C,MAAM;AACX,cAAMF,IAAI,GAAG,IAAIG,IAAJ,EAAb;AACA,cAAMF,MAAM,GAAGf,SAAS,CAACkB,aAAV,CAAwBJ,IAAxB,EAA8B,KAAKF,KAAL,CAAWC,QAAzC,CAAf;AACA,aAAKM,QAAL,CAAc;AAAEL,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAAd;AACD,OArBgD;;AAAA,WAuBjDL,oBAvBiD,GAuBzBU,KAAD,IAAW;AAChC,aAAKD,QAAL,CAAc;AAAEN,UAAAA,QAAQ,EAAEO,KAAK,CAACC,MAAN,CAAaC;AAAzB,SAAd;AACD,OAzBgD;AAAA;;AAQjDC,IAAAA,iBAAiB,GAAG;AAClB,WAAKP,IAAL;AACA,WAAKQ,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKT,IAAL,EAAP,EAAoB,IAApB,CAA3B;AACD;;AAEDU,IAAAA,oBAAoB,GAAG;AACrBC,MAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;AAYDI,IAAAA,MAAM,GAAG;AACP,YAAM;AAAEb,QAAAA,MAAF;AAAUD,QAAAA;AAAV,UAAmB,KAAKF,KAA9B;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEE;AACE,QAAA,QAAQ,EAAE,KAAKF,oBADjB;AAEE,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,QAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGX,SAAS,CAAC2B,GAAV,CAAc,CAACC,IAAD,EAAOC,CAAP,kBACb;AAAQ,QAAA,GAAG,EAAEA,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBD,IAAjB,CADD,CAJH,CAFF,CADF,EAYGf,MAAM,IAAIA,MAAM,CAACiB,QAAP,EAZb,CADF,CADF;AAkBD;;AA/CgD;AAiDpD","sourcesContent":["import * as React from \"react\";\r\n\r\nimport { timezoneNames, ZonedDate } from \"@progress/kendo-date-math\";\r\nimport \"@progress/kendo-date-math/tz/all\";\r\n\r\nexport default function Timezone() {\r\n  const timezones = timezoneNames()\r\n    .filter((l) => l.indexOf(\"/\") > -1)\r\n    .sort((a, b) => a.localeCompare(b));\r\n\r\n  class handleTimezoneChange extends React.Component {\r\n    interval;\r\n    state = {\r\n      timezone: \"\",\r\n      date: null,\r\n      result: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.tick();\r\n      this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    tick = () => {\r\n      const date = new Date();\r\n      const result = ZonedDate.fromLocalDate(date, this.state.timezone);\r\n      this.setState({ date, result });\r\n    };\r\n\r\n    handleTimezoneChange = (event) => {\r\n      this.setState({ timezone: event.target.value });\r\n    };\r\n\r\n    render() {\r\n      const { result, date } = this.state;\r\n      return (\r\n        <div className=\"row example-config\">\r\n          <div className=\"col-xs-12 example-col\">\r\n            <p>\r\n              Local time in\r\n              <select\r\n                onChange={this.handleTimezoneChange}\r\n                value={this.state.timezone}\r\n              >\r\n                {timezones.map((zone, i) => (\r\n                  <option key={i}>{zone}</option>\r\n                ))}\r\n              </select>\r\n            </p>\r\n            {result && result.toString()}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}