{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gordon\\\\Desktop\\\\React-Firebase\\\\src\\\\contexts\\\\AuthContext.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\nimport { timezoneNames, ZonedDate } from \"@progress/kendo-date-math\";\nconst AuthContext = React.createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider({\n  children\n}) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function timeZone(selectarea) {\n    const timezones = timezoneNames().filter(l => l.indexOf(\"/\") > -1).sort((a, b) => a.localeCompare(b));\n    return timezones;\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, !loading && children);\n}","map":{"version":3,"sources":["C:/Users/Gordon/Desktop/React-Firebase/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","timezoneNames","ZonedDate","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","timeZone","selectarea","timezones","filter","l","indexOf","sort","a","b","localeCompare","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","unsubscribe","onAuthStateChanged","user","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,2BAAzC;AAEA,MAAMC,WAAW,GAAGP,KAAK,CAACQ,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOR,UAAU,CAACM,WAAD,CAAjB;AACD;AAED,OAAO,SAASG,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,EAA9C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASc,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC/B,WAAOd,IAAI,CAACe,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,CAAP;AACD;;AAED,WAASE,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,WAAOd,IAAI,CAACiB,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC,CAAP;AACD;;AACD,WAASI,QAAT,CAAmBC,UAAnB,EAA8B;AAC5B,UAAMC,SAAS,GAAGnB,aAAa,GAC9BoB,MADiB,CACTC,CAAD,IAAOA,CAAC,CAACC,OAAF,CAAU,GAAV,IAAiB,CAAC,CADf,EAEjBC,IAFiB,CAEZ,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAFE,CAAlB;AAGA,WAAON,SAAP;AACD;;AAGD,WAASQ,MAAT,GAAkB;AAChB,WAAO5B,IAAI,CAAC6B,OAAL,EAAP;AACD;;AAED,WAASC,aAAT,CAAuBjB,KAAvB,EAA8B;AAC5B,WAAOb,IAAI,CAAC+B,sBAAL,CAA4BlB,KAA5B,CAAP;AACD;;AAED,WAASmB,WAAT,CAAqBnB,KAArB,EAA4B;AAC1B,WAAOL,WAAW,CAACwB,WAAZ,CAAwBnB,KAAxB,CAAP;AACD;;AAED,WAASoB,cAAT,CAAwBnB,QAAxB,EAAkC;AAChC,WAAON,WAAW,CAACyB,cAAZ,CAA2BnB,QAA3B,CAAP;AACD;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmC,WAAW,GAAGlC,IAAI,CAACmC,kBAAL,CAAwBC,IAAI,IAAI;AAClD3B,MAAAA,cAAc,CAAC2B,IAAD,CAAd;AACAzB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHmB,CAApB;AAKA,WAAOuB,WAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,QAAMG,KAAK,GAAG;AACZ7B,IAAAA,WADY;AAEZQ,IAAAA,KAFY;AAGZJ,IAAAA,MAHY;AAIZgB,IAAAA,MAJY;AAKZE,IAAAA,aALY;AAMZE,IAAAA,WANY;AAOZC,IAAAA;AAPY,GAAd;AAUA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC3B,OAAD,IAAYH,QADf,CADF;AAKD","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\nimport { auth } from \"../firebase\"\nimport { timezoneNames, ZonedDate } from \"@progress/kendo-date-math\";\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n  function timeZone (selectarea){\n    const timezones = timezoneNames()\n    .filter((l) => l.indexOf(\"/\") > -1)\n    .sort((a, b) => a.localeCompare(b));\n    return timezones\n  }\n    \n  \n  function logout() {\n    return auth.signOut()\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email)\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email)\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password)\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n      setLoading(false)\n    })\n\n    return unsubscribe\n  }, [])\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}